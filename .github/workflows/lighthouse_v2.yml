name: Run Lighthouse CRON CI

on:
  push:
    branches:
      - 'lighthouse_v2'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lhci:
    name: Audit with Lighthouse CI (${{ matrix.target }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: desktop
            collect_args: "--settings.preset=desktop"
            raw_dir: "lhci-raw-desktop"
            out_dir: "lhci-reports-desktop"
          - target: mobile
            collect_args: "--settings.emulatedFormFactor=mobile"
            raw_dir: "lhci-raw-mobile"
            out_dir: "lhci-reports-mobile"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node (>= 18.20)
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.x'

      - name: Install Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install Lighthouse CI CLI
        run: npm i -g @lhci/cli

      # 1) Collect always runs and writes to .lighthouseci
      - name: Collect — ${{ matrix.target }}
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
        run: |
          echo "Chrome path: ${CHROME_PATH:-$(which google-chrome || true)}"
          lhci collect \
            --config=lighthouserc.json \
            ${{ matrix.collect_args }}

      # 1a) Save raw results regardless of later failures
      - name: Copy raw results — ${{ matrix.target }}
        if: always()
        run: |
          mkdir -p "${{ matrix.raw_dir }}"
          # Copy JSONs and reports generated by collect
          cp -a .lighthouseci/. "${{ matrix.raw_dir }}/" || true
          ls -la "${{ matrix.raw_dir }}" || true

      # 2) Assert (may fail, but do not stop the job)
      - name: Assert — ${{ matrix.target }}
        continue-on-error: true
        run: |
          lhci assert --config=lighthouserc.json

      - name: Upload (filesystem) — ${{ matrix.target }}
        if: always()
        run: |
          lhci upload \
            --config=lighthouserc.json \
            --target=filesystem \
            --outputDir="${{ matrix.out_dir }}"
          ls -la "${{ matrix.out_dir }}" || true

      - name: Upload ${{ matrix.target }} artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-${{ matrix.target }}
          path: |
            ${{ matrix.out_dir }}
            ${{ matrix.raw_dir }}
