name: Run Lighthouse CRON CI

on:
  push:
    branches:
      - 'lighthouse_v2'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lhci:
    name: Audit with Lighthouse CI (${{ matrix.target }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: desktop
            collect_args: "--collect.settings.preset=desktop"
            out_dir: "lighthouse-desktop"
          - target: mobile
            collect_args: "--collect.settings.emulatedFormFactor=mobile"
            out_dir: "lighthouse-mobile"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node (>= 18.20)
        uses: actions/setup-node@v4
        with:
          node-version: '18.20.x'

      - name: Install Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install Lighthouse CI CLI
        run: npm i -g @lhci/cli

      - name: Collect — ${{ matrix.target }}
        env:
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
        run: |
          lhci collect --config=lighthouserc.json ${{ matrix.collect_args }}

      - name: Assert — ${{ matrix.target }}
        continue-on-error: true
        run: |
          mkdir -p "${{ matrix.out_dir }}"
          lhci assert --config=lighthouserc.json | tee "${{ matrix.out_dir }}/assert.txt" || true

      - name: Upload (filesystem) — ${{ matrix.target }}
        if: always()
        run: |
          lhci upload --config=lighthouserc.json --target=filesystem --outputDir="${{ matrix.out_dir }}"
          ls -la "${{ matrix.out_dir }}" || true

      - name: Append to Job Summary — ${{ matrix.target }}
        if: always()
        run: |
          {
            echo "### Lighthouse ${{ matrix.target }} — Assertions";
            echo;
            echo '```';
            if [ -f "${{ matrix.out_dir }}/assert.txt" ]; then
              cat "${{ matrix.out_dir }}/assert.txt"
            else
              echo "No assertion output."
            fi
            echo '```';
            echo;
            echo "Artifact: \`${{ matrix.out_dir }}\`"
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Upload ${{ matrix.target }} artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.out_dir }}
          path: ${{ matrix.out_dir }}
